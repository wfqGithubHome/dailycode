#ifndef _XML_PARSE_FOR_C_H#define _XML_PARSE_FOR_C_H#include <unistd.h>#include <stdio.h>#include <stdlib.h>#include <error.h>#include <time.h>#ifdef __cplusplus#include "../base/logwraper.h"#include "../core/system.h"#include "../core/management.h"#include "../core/ddns.h"#include "../core/auth.h"#include "../core/interface.h"#include "../core/netaddrmgr.h"#include "../core/schedulemgr.h"#include "../core/vlanmgr.h"#include "../core/protocolmgr.h"#include "../core/trafficmgr.h"#include "../core/vlanmgr.h"#include "../core/sessionmgr.h"#include "../core/firewallmgr.h"#include "../core/firewall.h"#include "../core/networkdetection.h"#include "../core/macbind.h"#include "../core/macbindmgr.h"#include "../core/macauth.h"#include "../core/macauthmgr.h"#include "../core/quota.h"#include "../core/quotamgr.h"#include "../core/globalipmgr.h"#include "../core/globalip.h"#include "../core/portmirror.h"#include "../core/portmirrormgr.h"#include "../core/netaddr.h"#include "../core/protocol.h"#include "../core/schedule.h"#include "../core/traffic_util.h"#include "../core/logger.h"#include "../core/interfacemgr.h"#include "../core/domainnode.h"#include "../core/domainmgr.h"#include "../core/dnspolicy.h"#include "../core/dnspolicymgr.h"#include "../core/extensionnode.h"#include "../core/extensionmgr.h"#include "../core/httpservernode.h"#include "../core/httpservermgr.h"#include "../core/httpdirpolicynode.h"#include "../core/httpdirpolicymgr.h"#include "../core/urlformatnode.h"#include "../core/urlformatmgr.h"#include "../tinyxml/tinyxml.h"#include "../config/config.h"#include "../config/route_config.h"#include "../xml/reader.h"#include "../xml/writer.h"#include "../xml/parser.h"#include "../xml/route_parser.h"#include "../xml/rwxml.h"#include "../global.h"#include <list>/* Add by chenhao , 2014-11-20 16:36:04 */#include "../core/timing.h"#include "../core/timingmgr.h"using namespace maxnet;#endif //__cplusplus#include "mgtcgi_xmlconfig.h"#ifdef __cplusplusextern "C" {#endif //__cplusplusint get_xml_nodeforLayer7(const char * configfile,const char * layer7file, const int nodetype,const char * lanaguage,void ** buf, int * out_size);int get_xml_node(const char * configfile,const int nodetype,void ** buf, int * out_size);char * find_layer7_name(const char * configfile,const char * layer7file, const char * lanaguage,const char * const layer7match);int get_xml_nodeforservinfo(const char * configfile, const char * servinfofile, void ** buf, int * out_size);int save_xml_node(const char * filename,const int nodetype, const void * buf, const int  buflen); int free_xml_node(void ** buf);int xml_do_command(int argc, char *argv[]);#ifdef __cplusplus}#endif //__cplusplus#endif //_XML_PARSE_FOR_C_H