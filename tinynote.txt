1.高效学习策略
重复，专注，背景与细节，关系，节奏。

剩余时间学习计划：

一定要实践，做东西出来。代码用github管理起来。

2.apue 学习计划（对付这种大砖头，一定要有计划，加上坚持执行才能搞定）
学习方法：看书，练习，习题，记忆，整理，应用。

学习进度规划：从第3章到21章，共19章。

每周2章，包括看书，运行例子，练习习题（做多少看时间情况），记忆知识点。

大概10周左右的时间把这本书吃透。

本周计划，第3章。

下周计划：4,5章。

3.unp学习计划
学习方法与apue类似。
前13章，除了9,10以外都看了一遍。看过的重点是运行例子，练习习题，和整理。

总共31章，看过11章（1,2略过），还剩20章。

每周两章，可以看过的和没看过的各一章。
本周计划：1,2,3，9章。
下周计划：4,10章。

4.shell scripts
（1）工具、命令的整理，各个选项的详细用法。带实例讲解。定期整理，比如一周一个。
（2）脚本编写练习，网上找点题目练练。
（3）语法，工具的持续学习。

5.makefile
（1）语法复习
（2）gcc 选项
（3）gdb调试
（4）工具的使用，source insight等。

6.xml ， json c库的学习和整理，libcurl整理 ， http总结。

7.协议，tcp/ip，三卷，慢慢啃，这个可以等apue和unp学完之后来搞。

8.数据库，mysql，首先是基本的使用，然后是数据库的设计。

9.c，主要是标准库。

10.还有一点很重要的，在github上找点相关的开源项目（主要是linux，网络编程方面的），看看源代码学习编程，或者是使用它也好。

